---
# apt dist-upgrade

- name: update apt cache
  apt: update_cache=yes cache_valid_time=43200
  tags: [ 'packages' ]

# apt dist-upgrade

- name: apt dist-upgrade
  apt: upgrade=dist
  tags: [ 'packages' ]

- name: ensure that openssh server is installed
  apt: name="{{ item }}" state="{{ kvm_pkg_state }}"
  with_items:
    - qemu-kvm
    - libvirt-bin
    - virtinst
    - virt-top
    - bridge-utils
    - qemu
  tags: [ 'packages', 'kvm' ]

- name: set administrators
  user: name="{{ item }}" append=yes groups=libvirtd
  with_items: "{{ kvm_administrators }}"
  tags: ["configuration","kvm"]

- name: ensure libvirt-bin is started/stopped
  service: name=libvirt-bin state="{{ kvm_service_state }}" enabled="{{ kvm_service_enabled }}"
  tags: ["service","kvm"]

- name: ensure disks path exist
  file: state=directory path="{{ item.1.path | dirname }}"
  with_subelements: 
    - "{{ kvm_vms }}"
    - disks
  tags: ["configuration","kvm"]

- name: ensure disks are copied
  command: cp "{{ item.1.source }}" "{{ item.1.path }}" creates="{{ item.1.path }}"
  with_subelements: 
    - "{{ kvm_vms }}"
    - disks
  when: item.1.source is defined
  tags: ["configuration","kvm"]

- name: ensure disks are created
  command: qemu-img create -f "{{ item.1.type }}" "{{ item.1.path }}" "{{ item.1.size }}" creates="{{ item.1.path }}"
  with_subelements: 
    - "{{ kvm_vms }}"
    - disks
  when: item.1.size is defined and item.1.type is defined and item.1.type in ["qcow2", "raw"]
  tags: ["configuration","kvm"]

- name: define VMs
  virt: name="{{ item.name }}"
        command=define
        xml="{{ lookup('template', 'vm.kvm.libvirt.xml.j2') }}"
        uri="{{ kvm_uri }}"
  with_items: "{{ kvm_vms }}"
  tags: ["configuration","kvm"]

- name: start VMs
  virt: name="{{ item.name }}" state=running uri="{{ kvm_uri }}"
  with_items: "{{ kvm_vms }}"
  tags: ["service","kvm"]

